# Backend Configuration - Example
# Copy this file to .env and adjust values according to your environment
# Configuration compatible with Pydantic Settings (app/config.py)

# === BASIC CONFIGURATION ===
# Backend API base URL
BASE_URL=http://localhost:8000

# Directory where uploaded images are stored
IMAGES_DIR=app/static/images

# Base URL for static files (can be CDN or cloud storage)
STATIC_URL=http://localhost:8000/static

# === DATABASE CONFIGURATION ===
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USER=postgres
DATABASE_PASSWORD=postgres
DATABASE_NAME=orchestration_db
# DATABASE_URL=postgresql://user:password@localhost/dbname

# === EXTERNAL SERVICES CONFIGURATION ===
# Microservices URLs (for local development with Docker)
DESCRIBE_IMAGE_SERVICE_URL=http://localhost:8001
GENERATE_DESCRIPTION_SERVICE_URL=http://localhost:8003

# For Docker Compose (internal communication between containers):
# DESCRIBE_IMAGE_SERVICE_URL=http://describe-image-service:8001
# GENERATE_DESCRIPTION_SERVICE_URL=http://generate-description-service:8003

# === ENVIRONMENT-SPECIFIC CONFIGURATIONS ===

# LOCAL DEVELOPMENT:
# BASE_URL=http://localhost:8000
# IMAGES_DIR=app/static/images
# STATIC_URL=http://localhost:8000/static

# PRODUCTION WITH LOCAL STORAGE:
# BASE_URL=https://api.yoursite.com
# IMAGES_DIR=/var/www/static/images
# STATIC_URL=https://cdn.yoursite.com/static

# PRODUCTION WITH CLOUDFLARE R2/S3:
# BASE_URL=https://api.yoursite.com
# IMAGES_DIR=/tmp/uploads
# STATIC_URL=https://your-bucket.r2.cloudflarestorage.com

# PRODUCTION WITH AWS S3:
# BASE_URL=https://api.yoursite.com
# IMAGES_DIR=/tmp/uploads
# STATIC_URL=https://your-bucket.s3.amazonaws.com

# Other configurations you might need:
# DATABASE_URL=postgresql://user:password@localhost/dbname
# SECRET_KEY=your-secret-key-here
# DEBUG=false
